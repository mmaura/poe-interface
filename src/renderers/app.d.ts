
export interface poe_interfaceAPI {
  cleanup: (channel: string) => void
  send: (channel: string, ...arg: any[]) => Promise<any>
  sendSync: (channel: string, ...arg: any[]) => Promise<any>
  receive: (channel: string, func: (event: any, ...arg: any[]) => void) => void
  openExternal: (url: string) => void
  openWiki: (page: string) => void
}

declare global {
  interface Window {
    poe_interfaceAPI: poe_interfaceAPI
  }

  type IAppPlayer = {
    name: string
    level: number
    characterClass: string
    characterAscendancy?: string
    currentZoneName: string
    currentZoneAct: number
  }

  interface IAppGems {
    reward: any
    required_lvl: number
    color: string
    isReward: boolean
    isSupport: boolean
    buy: IBuy[]
    name: string
    isVaal: boolean
    gemTags: string[]
    iconPath: string
    isActive: boolean
  }
  /***************************
   * acts.json
   */
  // Generated by https://quicktype.io

  export interface IActsGuide {
    identity: ActGuideIdentity
    acts: IAct[]
  }

  export interface IAct {
    act?: string
    actid: number
    zones: IZone[]
  }

  export interface IZone {
    hastrial?: boolean
    image?: string[]
    note: string
    level?: number
    name: string
    haspassive?: boolean
    questRewardsSkills?: boolean
    altimage?: string
    quest?: string
    hasRecipe?: boolean
    hasWaypoint?: boolean
    recipe?: Recipe
  }

  export interface Recipe {
    mods: string[]
    tooltip: string
  }


  /***********************
   * classes.json
   */

  export interface IPlayerClasses {
    classe?: string
    ascendancy?: string[]
  }

  /**************************
   * guide.json
   */

  export interface GuideIdentity {
    name: string
    lang: string
    game_version: number
    filename?: string
    webAssetPath?: string
    sysAssetPath?: string
    readonly?: boolean
    class?: string
    url?: string
  }

  // eslint-disable-next-line @typescript-eslint/no-empty-interface
  export interface ActGuideIdentity extends GuideIdentity {
  }

  export interface ClassGuideIdentity extends GuideIdentity {
    class: string
  }




  // Generated by https://quicktype.io
  export interface IClassesGuide {
    identity: ClassGuideIdentity
    acts: IGuideAct[]
  }

  export interface IGuideAct {
    act: number
    notes?: string
    gears: Gear[]
    treeimage?: string
  }

  export interface Gear {
    name: string
    notes?: string
    gem_info: GemInfo[]
    gems?: IAppGems[]
    chasses?: string[]
  }

  export interface GemInfo {
    name: string
    note?: string
  }

  /**************************
   * gems.json
   */

  // Generated by https://quicktype.io
  export interface IGems {
    reward: IReward
    required_lvl: number
    color: string
    isReward: boolean
    isSupport: boolean
    buy: IBuy[]
    name: string
    isVaal: boolean
    gemTags: string[]
    iconPath: string
    isActive: boolean
    alt_name?: string[]
  }

  export interface IBuy {
    npc: string
    act: number
    town: string
    available_to: string[]
    quest_name: string
  }

  export interface IReward {
    rien?: number
  }

  // Generated by https://quicktype.io
  export interface IRichText {
    data: string[]
    classe: string
  }
}
